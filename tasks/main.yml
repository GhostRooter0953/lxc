---
- name: Check lxd storage status
  shell: lxc storage ls -f compact | sed '1d' | grep "CREATED"
  register: storage_status
  failed_when: false

- name: Ensure deps installed
  apt:
    pkg:
      - snapd
      - python3-pexpect
  when: storage_status.rc != 0

- name: Ensure LXD installed
  snap:
    name: lxd
    classic: yes
    state: present
  when: storage_status.rc != 0

- name: Ensure mnt directory exists
  file:
    path: /mnt/data/containers
    state: directory
    mode: '0755'

- name: Ensure LXD directory exists
  file:
    path: /var/tmp/lxd
    state: directory
    mode: '0755'

- name: Copy LXD config
  template:
    src: "{{ preseed_template }}"
    dest: /var/tmp/lxd/preseed.yml

- name: Running LXD init
  shell: lxd init --preseed < /var/tmp/lxd/preseed.yml
  when: storage_status.rc != 0

- name: Check 'ubuntu-minimal' repo in lxc remote
  shell: lxc remote ls | grep -o ubuntu-minimal
  register: remote_list
  failed_when: false

- name: Add 'ubuntu-minimal' repo in lxc remote
  shell: lxc remote add ubuntu-minimal https://cloud-images.ubuntu.com/minimal/releases --protocol=simplestreams
  when: remote_list.rc != 0

- name: Get list of necessary directories
  command: find "{{ mount_path }}" -type d
  register: dirs
  changed_when: false

- name: Create necessary subdirectories for each container
  file:
    path: "{{ mount_path }}/{{ item.value.name }}{{ item.value.mount[0].source }}"
    state: directory
    owner: "1000000"
    group: "1000000"
  loop: "{{ lxc_containers | dict2items }}"
  when: mount_path + '/' + item.value.name + item.value.mount[0].source not in dirs.stdout_lines

- name: Get list of existing LXC profiles
  command: lxc profile list --format csv
  register: profiles
  changed_when: false

- name: Copy LXC profiles from template if they don't exists
  template:
    src: "{{ profile_template }}"
    dest: "/var/tmp/lxd/{{ item.value.profile }}.yml"
  loop: "{{ lxc_containers | dict2items }}"
  when: "item.value.profile not in profiles.stdout"

- name: Create lxc profiles
  shell: lxc profile create {{ item.value.profile }} && lxc profile edit {{ item.value.profile }} < /var/tmp/lxd/{{ item.value.profile }}.yml || lxc profile delete {{ item.value.profile }}
  loop: "{{ lxc_containers | dict2items }}"
  when: "item.value.profile not in profiles.stdout"

- name: Launch new containers
  shell: lxc info {{ item.value.name }} || lxc launch {{ item.value.image }}{{ item.value.version }} {{ item.value.name }} --profile {{ item.value.profile }}
  loop: "{{ lxc_containers | dict2items }}"

- name: Remove temp files
  file:
    path: /var/tmp/lxd
    state: absent
  failed_when: false

- name: Check containers status
  shell: lxc info {{ item.value.name }} | grep -o 'RUNNING'
  register: container_status
  loop: "{{ lxc_containers | dict2items }}"
  failed_when: false

- name: List failed containers
  debug:
    msg: "The container {{ item.item.value.name }} failed to start."
  loop: "{{ container_status.results }}"
  when: "'RUNNING' not in item.stdout"
